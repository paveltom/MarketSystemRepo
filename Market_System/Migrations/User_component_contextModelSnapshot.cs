// <auto-generated />
using System;
using Market_System.user_component_DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Market_System.Migrations
{
    [DbContext(typeof(User_component_context))]
    partial class User_component_contextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Market_System.user_component_DAL.Models.Bucket_model", b =>
                {
                    b.Property<string>("basket_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Cart_modelID")
                        .HasColumnType("int");

                    b.Property<string>("store_id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("basket_id");

                    b.HasIndex("Cart_modelID");

                    b.ToTable("bucket_models");
                });

            modelBuilder.Entity("Market_System.user_component_DAL.Models.Cart_model", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("total_price")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("cart_models");
                });

            modelBuilder.Entity("Market_System.user_component_DAL.Models.Product_in_basket_model", b =>
                {
                    b.Property<string>("product_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Bucket_modelbasket_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("basket_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("product_id");

                    b.HasIndex("Bucket_modelbasket_id");

                    b.ToTable("products_in_baskets_models");
                });

            modelBuilder.Entity("Market_System.user_component_DAL.Models.only_for_checking_if_first_time_running", b =>
                {
                    b.Property<int>("firsttimerunning")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("firsttimerunning");

                    b.ToTable("first_time_flag");
                });

            modelBuilder.Entity("Market_System.user_component_DAL.Models.user_model", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hashed_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_admin")
                        .HasColumnType("bit");

                    b.Property<int?>("my_cartID")
                        .HasColumnType("int");

                    b.Property<string>("user_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_state")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.HasIndex("my_cartID");

                    b.ToTable("user_models");
                });

            modelBuilder.Entity("Market_System.user_component_DAL.Models.Bucket_model", b =>
                {
                    b.HasOne("Market_System.user_component_DAL.Models.Cart_model", null)
                        .WithMany("baskets")
                        .HasForeignKey("Cart_modelID");
                });

            modelBuilder.Entity("Market_System.user_component_DAL.Models.Product_in_basket_model", b =>
                {
                    b.HasOne("Market_System.user_component_DAL.Models.Bucket_model", null)
                        .WithMany("products")
                        .HasForeignKey("Bucket_modelbasket_id");
                });

            modelBuilder.Entity("Market_System.user_component_DAL.Models.user_model", b =>
                {
                    b.HasOne("Market_System.user_component_DAL.Models.Cart_model", "my_cart")
                        .WithMany()
                        .HasForeignKey("my_cartID");
                });
#pragma warning restore 612, 618
        }
    }
}
